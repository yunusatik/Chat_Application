package app;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import client.Client;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.text.StyledDocument;

/**
 *
 * @author Yunus Emre Atik (yunusemre.atik@stu.fsm.edu.tr)
 */
public class Room extends javax.swing.JFrame {

    public Room ThisRoom;
    public String room_Name;
    public int oda_Sahibi_Id;
    public String my_Name;
    public Color color;
    public int myID;

    public static int show_ID = 2;
    public int room_ID = 2;
    public int kisiSayisi = 0;

    public static ArrayList emoji = new ArrayList<>();
    public static ArrayList<Integer> emoji_Nokta = new ArrayList<>();

    public ArrayList online_clients_names = new ArrayList<>();
    public ArrayList online_clients_ids = new ArrayList<>();

    public DefaultListModel listClientsNamesModel;          // Clients Names ListModel
    public DefaultListModel listClientsIdModel;             // Clients Ids   ListModel

    public boolean send_File_Control = true;

    public Room(String roomName, int roomID, int odaSahibiId, int myID, String myname, Color color) {
        initComponents();
        ThisRoom = this;

        ThisRoom.setDefaultCloseOperation(Room.DISPOSE_ON_CLOSE);
        Color frameColor = new Color(0, 255, 204);
        ThisRoom.getContentPane().setBackground(frameColor);
        ThisRoom.addWindowListener(exitListener);

        listClientsNamesModel = new DefaultListModel();
        listClientsIdModel = new DefaultListModel();

        lst_Clients_Names.setModel(listClientsNamesModel);              // Set Clients Names ListModel
        lst_Clients_Id.setModel(listClientsIdModel);                    // Set Clients  ID   ListModel

        lst_Clients_Names.setVisibleRowCount(10);
        lst_Clients_Id.setVisibleRowCount(10);

        ThisRoom.room_Name = roomName;
        ThisRoom.room_ID = roomID;
        ThisRoom.oda_Sahibi_Id = odaSahibiId;
        ThisRoom.my_Name = myname;
        ThisRoom.color = color;
        ThisRoom.myID = myID;

        ThisRoom.txt_My_Name.setText(myname);
        ThisRoom.txt_My_Name.setEnabled(false);
        ThisRoom.setTitle(roomName + " Room");
        btn_Send_Private_Message.setEnabled(false);

        lbl_Room_Name.setText(roomName + " Room");
    }
    WindowListener exitListener = new WindowAdapter() {

        @Override
        public void windowClosing(WindowEvent e) {
            int confirm = JOptionPane.showOptionDialog(
                    ThisRoom, "Are You Sure to Close Private Chat?",
                    "Exit Confirmation", JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (confirm == 0) {
                ThisRoom.setDefaultCloseOperation(Private.DISPOSE_ON_CLOSE);
                ActionEvent evt = null;
                btn_DisconnectActionPerformed(evt);
            } else {
                ThisRoom.setDefaultCloseOperation(Private.DO_NOTHING_ON_CLOSE);
            }
        }
    };

    public Room() {
        initComponents();

    }

    public void refreshList() {
        lst_Clients_Names.setModel(listClientsNamesModel);              // Set Clients Names ListModel
        lst_Clients_Id.setModel(listClientsIdModel);                    // Set Clients  ID   ListModel
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        txtPanel_Girdi = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txt_My_Name = new javax.swing.JTextField();
        txt_Selected_User = new javax.swing.JTextField();
        btn_Send_Private_Message = new javax.swing.JButton();
        btn_Disconnect = new javax.swing.JButton();
        lbl_Room_Name = new javax.swing.JLabel();
        lbl_Alt = new javax.swing.JLabel();
        lbl_Yan = new javax.swing.JLabel();
        lbl_File_Send = new javax.swing.JLabel();
        emoji_Smile = new javax.swing.JLabel();
        emoji_Smile_Teeth = new javax.swing.JLabel();
        emoji_Goz_Kirpma = new javax.swing.JLabel();
        emoji_Cry = new javax.swing.JLabel();
        emoji_Teeth = new javax.swing.JLabel();
        emoji_Tedirgin = new javax.swing.JLabel();
        emoji_Dead = new javax.swing.JLabel();
        emoji_Mouthless = new javax.swing.JLabel();
        emoji_Saskin = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPanel_Ekran = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_Clients_Names = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_Clients_Id = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Room");

        txtPanel_Girdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPanel_GirdiKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(txtPanel_Girdi);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setBackground(new java.awt.Color(255, 255, 102));
        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Online  Users");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        txt_My_Name.setEditable(false);
        txt_My_Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_My_Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txt_Selected_User.setEditable(false);
        txt_Selected_User.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Selected_User.setEnabled(false);

        btn_Send_Private_Message.setBackground(new java.awt.Color(255, 204, 0));
        btn_Send_Private_Message.setText("Send Private Message");
        btn_Send_Private_Message.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Send_Private_Message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Send_Private_MessageActionPerformed(evt);
            }
        });

        btn_Disconnect.setBackground(new java.awt.Color(255, 51, 51));
        btn_Disconnect.setText("Disconnect");
        btn_Disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DisconnectActionPerformed(evt);
            }
        });

        lbl_Room_Name.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N
        lbl_Room_Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Room_Name.setText("FSM ROOM");

        lbl_File_Send.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/icon_File_Attach.png"))); // NOI18N
        lbl_File_Send.setFocusable(false);
        lbl_File_Send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbl_File_SendMousePressed(evt);
            }
        });

        emoji_Smile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Smile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Smile.png"))); // NOI18N
        emoji_Smile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_SmileMousePressed(evt);
            }
        });

        emoji_Smile_Teeth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Smile_Teeth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Smile_Teeth.png"))); // NOI18N
        emoji_Smile_Teeth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_Smile_TeethMousePressed(evt);
            }
        });

        emoji_Goz_Kirpma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Goz_Kirpma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Goz_Kirpma.png"))); // NOI18N
        emoji_Goz_Kirpma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_Goz_KirpmaMousePressed(evt);
            }
        });

        emoji_Cry.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Cry.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Cry.png"))); // NOI18N
        emoji_Cry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_CryMousePressed(evt);
            }
        });

        emoji_Teeth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Teeth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Teeth.png"))); // NOI18N
        emoji_Teeth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_TeethMousePressed(evt);
            }
        });

        emoji_Tedirgin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Tedirgin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Tedirgin.png"))); // NOI18N
        emoji_Tedirgin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_TedirginMousePressed(evt);
            }
        });

        emoji_Dead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Dead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Dead.png"))); // NOI18N
        emoji_Dead.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_DeadMousePressed(evt);
            }
        });

        emoji_Mouthless.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Mouthless.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Mouthless.png"))); // NOI18N
        emoji_Mouthless.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_MouthlessMousePressed(evt);
            }
        });

        emoji_Saskin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emoji_Saskin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/app/images/Emoji_Saskin.png"))); // NOI18N
        emoji_Saskin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                emoji_SaskinMousePressed(evt);
            }
        });

        txtPanel_Ekran.setEditable(false);
        jScrollPane4.setViewportView(txtPanel_Ekran);

        lst_Clients_Names.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lst_Clients_Names.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lst_Clients_NamesMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(lst_Clients_Names);

        jScrollPane1.setViewportView(lst_Clients_Id);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txt_My_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btn_Disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_File_Send)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(emoji_Smile)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Smile_Teeth)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Goz_Kirpma)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Cry)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Teeth)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Tedirgin)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Dead)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Mouthless)
                        .addGap(6, 6, 6)
                        .addComponent(emoji_Saskin)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Room_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_Selected_User, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Send_Private_Message, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(lbl_Yan, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lbl_Alt, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_My_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_Disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_File_Send)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emoji_Smile)
                            .addComponent(emoji_Smile_Teeth)
                            .addComponent(emoji_Goz_Kirpma)
                            .addComponent(emoji_Cry)
                            .addComponent(emoji_Teeth)
                            .addComponent(emoji_Tedirgin)
                            .addComponent(emoji_Dead)
                            .addComponent(emoji_Mouthless)
                            .addComponent(emoji_Saskin)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_Room_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(txt_Selected_User, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btn_Send_Private_Message, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_Yan, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(lbl_Alt, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPanel_GirdiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPanel_GirdiKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            ArrayList nameInfo = new ArrayList<>();
            ArrayList useless = new ArrayList<>();
            Message msg = new Message(Message.Message_Type.SendBroadCastMessageCheck);
            nameInfo.add(txt_My_Name.getText());        //isim
            nameInfo.add(color);                        //color
            nameInfo.add(txtPanel_Girdi.getText());     //girdi
            nameInfo.add(emoji);                        //emoji
            nameInfo.add(online_clients_names);         //friend
            nameInfo.add(show_ID);                      //privateID
            nameInfo.add(useless);                      //useless
            nameInfo.add(room_Name);                    //roomName
            nameInfo.add(room_ID);                      //room_Id
            msg.content = nameInfo;
            Client.Send(msg);
            emoji = new ArrayList();
            emoji.clear();
            txtPanel_Girdi.setText("");
        }
    }//GEN-LAST:event_txtPanel_GirdiKeyPressed

    private void lbl_File_SendMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_File_SendMousePressed
        send_File_Control = false;

        ArrayList fileInfo = new ArrayList<>();
        File[] fileToSend = new File[1];
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setDialogTitle("Choose a file to send.");

        if (jFileChooser.showOpenDialog(ThisRoom) == JFileChooser.APPROVE_OPTION) {
            try {

                fileToSend[0] = jFileChooser.getSelectedFile();
                fileInfo.add(fileToSend[0].getName());  //0 path

                byte[] content = Files.readAllBytes(fileToSend[0].toPath());
                fileInfo.add(content);                  //1 data

                fileInfo.add(txt_My_Name.getText());    //2 my name
                fileInfo.add(show_ID);                  //3 privateID
                fileInfo.add(online_clients_names);     //4 friend name
                fileInfo.add(room_ID);                  //5 roomID

                Message msg3 = new Message(Message.Message_Type.SendFileCheck);
                msg3.content = fileInfo;    //path,data,myname,showID,friendname
                Client.Send(msg3);

            } catch (IOException ex) {
                System.out.println("Dosya Göndermede Hata! (App.Java)");
            }
        }
    }//GEN-LAST:event_lbl_File_SendMousePressed

    private void emoji_SmileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_SmileMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(0);       //Smile Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Smile_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_SmileMousePressed

    private void emoji_Smile_TeethMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_Smile_TeethMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(1);   //Smile Teeth Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Smile_Teeth_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_Smile_TeethMousePressed

    private void emoji_Goz_KirpmaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_Goz_KirpmaMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(2);   //Smile Teeth Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Goz_Kirpma_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_Goz_KirpmaMousePressed

    private void emoji_CryMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_CryMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(3);   //Cry Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Cry_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_CryMousePressed

    private void emoji_TeethMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_TeethMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(4);   //Teeth Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Teeth_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_TeethMousePressed

    private void emoji_TedirginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_TedirginMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(5);   //Tedirgin Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Tedirgin_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_TedirginMousePressed

    private void emoji_DeadMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_DeadMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(6);   //Saskin Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Dead_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_DeadMousePressed

    private void emoji_MouthlessMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_MouthlessMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(7);   //Mouthless Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Mouthless_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_MouthlessMousePressed

    private void emoji_SaskinMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emoji_SaskinMousePressed
        StyledDocument doc = txtPanel_Girdi.getStyledDocument();
        int length = doc.getLength();
        emoji.add(8);   //Saskin Op Code
        emoji.add(length);
        java.net.URL imgUrl = getClass().getResource("/app/images/Emoji_Saskin_Mini.png");
        txtPanel_Girdi.insertIcon(new ImageIcon(imgUrl));
    }//GEN-LAST:event_emoji_SaskinMousePressed

    private void btn_DisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DisconnectActionPerformed
        if (myID == oda_Sahibi_Id) {    //ben odanın sahibi isem
            ArrayList roomInfo = new ArrayList<>();
            roomInfo.add(room_Name);
            roomInfo.add(room_ID);
            roomInfo.add(oda_Sahibi_Id);
            roomInfo.add(0);

            Message msg = new Message(Message.Message_Type.RoomCloseCheck);
            msg.content = roomInfo;
            Client.Send(msg);
        } else {        //oda sahibi değilim
            App.ThisApp.public_Rooms.remove(ThisRoom);
            ArrayList roomInfo = new ArrayList<>();
            roomInfo.add(room_Name);
            roomInfo.add(room_ID);
            roomInfo.add(oda_Sahibi_Id);
            roomInfo.add(1);
            roomInfo.add(my_Name);
            roomInfo.add(myID);

            Message msg = new Message(Message.Message_Type.RoomCloseCheck);
            msg.content = roomInfo;
            Client.Send(msg);
        }
//        if (is_My_Room == true) {   // Tüm kişilerde odayı kapat            
//            ArrayList roomInfo = new ArrayList<>();
//            roomInfo.add(room_Name);
//            roomInfo.add(room_ID);
//            Message msg = new Message(Message.Message_Type.RoomCloseCheck);
//            msg.content = roomInfo;
//            Client.Send(msg);
//        } else {   // Kendi ekranındad kapat ve room'daki listeyi refreshle
//            ThisRoom.setVisible(false);
//        }

        ThisRoom.setVisible(false);
    }//GEN-LAST:event_btn_DisconnectActionPerformed

    private void lst_Clients_NamesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lst_Clients_NamesMousePressed
        lst_Clients_Names.setSelectionBackground(Color.red);
        int index = lst_Clients_Names.getSelectedIndex();
        lst_Clients_Id.setSelectedIndex(index);
        txt_Selected_User.setText(lst_Clients_Names.getSelectedValue());
        if (!txt_Selected_User.getText().equals("")) {
            btn_Send_Private_Message.setEnabled(true);
        }
    }//GEN-LAST:event_lst_Clients_NamesMousePressed

    private void btn_Send_Private_MessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Send_Private_MessageActionPerformed
        int friend_ID = lst_Clients_Id.getSelectedValue();
        String room_n = txt_My_Name.getText() + " - " + txt_Selected_User.getText();

        if (myID == friend_ID) {
            JOptionPane.showMessageDialog(ThisRoom, "Kendine Mesaj Yollayamazsın");
        } else {
            if (App.ThisApp.private_Rooms.isEmpty()) {
                App.ThisApp.same_Person_Control = true;
            } else {
                int a = 0;
                for (Private private_Room : App.ThisApp.private_Rooms) {
                    String pr_Name = private_Room.ThisPrivate.private_Room_Name;
                    String[] arr = pr_Name.split(" ");
                    if (arr[0].equals(txt_My_Name.getText()) || arr[0].equals(txt_Selected_User.getText())) {
                        a++;
                    }
                    if (arr[2].equals(txt_My_Name.getText()) || arr[2].equals(txt_Selected_User.getText())) {
                        a++;
                    }
                    if (a == 2) {
                        App.ThisApp.same_Person_Control = false;
                        a = 0;
                        break;
                    }
                    a = 0;
                    App.ThisApp.same_Person_Control = true;
                }
            }

            if (App.ThisApp.same_Person_Control) {
                ArrayList id = new ArrayList<>();
                ArrayList<String> private_friend = new ArrayList<>();
                ArrayList private_Info = new ArrayList<>();
                id.add(friend_ID);
                private_friend.add(txt_Selected_User.getText());

                Message msg = new Message(Message.Message_Type.PrivateConnectCheck);
                private_Info.add(txt_My_Name.getText()); //my name
                private_Info.add(color);                    //my App_Color
                private_Info.add("useless");                //useless
                private_Info.add(myID);                   //my App_ID
                private_Info.add(private_friend);           //friend name(ARR)
                private_Info.add(friend_ID);                //friend App_ID
                private_Info.add(id);                       //friend App_ID(ARR)
                private_Info.add(room_n);                   //room name
                msg.content = private_Info;
                Client.Send(msg);

                Private pr = new Private(txt_My_Name.getText(), myID, txt_Selected_User.getText(), friend_ID, color, room_n);
                pr.setLocationRelativeTo(App.ThisApp);
                App.ThisApp.private_Rooms.add(pr);
                pr.setVisible(true);

                lst_Clients_Names.clearSelection();
                txt_Selected_User.setText("");
                btn_Send_Private_Message.setEnabled(false);
            } else if (!App.ThisApp.same_Person_Control) {
                JOptionPane.showMessageDialog(ThisRoom, "Aynı kisiyle birden fazla oda açamazsın.");
            }
        }

    }//GEN-LAST:event_btn_Send_Private_MessageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Room.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Room().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_Disconnect;
    public javax.swing.JButton btn_Send_Private_Message;
    public javax.swing.JLabel emoji_Cry;
    public javax.swing.JLabel emoji_Dead;
    public javax.swing.JLabel emoji_Goz_Kirpma;
    public javax.swing.JLabel emoji_Mouthless;
    public javax.swing.JLabel emoji_Saskin;
    public javax.swing.JLabel emoji_Smile;
    public javax.swing.JLabel emoji_Smile_Teeth;
    public javax.swing.JLabel emoji_Tedirgin;
    public javax.swing.JLabel emoji_Teeth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lbl_Alt;
    public javax.swing.JLabel lbl_File_Send;
    public javax.swing.JLabel lbl_Room_Name;
    private javax.swing.JLabel lbl_Yan;
    public javax.swing.JList<Integer> lst_Clients_Id;
    public javax.swing.JList<String> lst_Clients_Names;
    public javax.swing.JTextPane txtPanel_Ekran;
    public javax.swing.JTextPane txtPanel_Girdi;
    public javax.swing.JTextField txt_My_Name;
    private javax.swing.JTextField txt_Selected_User;
    // End of variables declaration//GEN-END:variables
}
